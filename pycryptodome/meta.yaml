{% set name = "pycryptodome" %}
{% set version = "3.6.1" %}
{% set file_ext = "tar.gz" %}
{% set hash_type = "sha256" %}
{% set hash_value = "15013007e393d0cc0e69f4329a47c4c8597b7f3d02c12c03f805405542f70c71" %}

package:
  name: '{{ name|lower }}'
  version: '{{ version }}'

source:
  fn: '{{ name }}-{{ version }}.{{ file_ext }}'
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.{{ file_ext }}
  '{{ hash_type }}': '{{ hash_value }}'

build:
  number: 0
  script: python setup.py install --single-version-externally-managed --record=record.txt

requirements:
  build:
    - {{ compiler('c') }}
  host:
    - python
    - setuptools
  run:
    - python

test:
  imports:
    - Crypto
    - Crypto.Cipher
    - Crypto.Hash
    - Crypto.IO
    - Crypto.Math
    - Crypto.Protocol
    - Crypto.PublicKey
    - Crypto.Random
    - Crypto.SelfTest
    - Crypto.SelfTest.Cipher
    - Crypto.SelfTest.Hash
    - Crypto.SelfTest.IO
    - Crypto.SelfTest.Math
    - Crypto.SelfTest.Protocol
    - Crypto.SelfTest.PublicKey
    - Crypto.SelfTest.Random
    - Crypto.SelfTest.Signature
    - Crypto.SelfTest.Util
    - Crypto.Signature
    - Crypto.Util

about:
  home: http://www.pycryptodome.org
  license: BSD License
  license_family: BSD
  license_file: ''
  summary: Cryptographic library for Python
  description: "\nPyCryptodome\n============\n\nPyCryptodome is a self-contained Python package of low-level\ncryptographic primitives.\n\nIt supports Python 2.4 or newer, all Python 3 versions and PyPy.\n\
    \nYou can install it with::\n\n    pip install pycryptodome\n\nAll modules are installed under the ``Crypto`` package.\n\nCheck the pycryptodomex_ project for the equivalent library that\nworks under\
    \ the ``Cryptodome`` package.\n\nPyCryptodome is a fork of PyCrypto. It brings several enhancements\nwith respect to the last official version of PyCrypto (2.6.1),\nfor instance:\n\n* Authenticated\
    \ encryption modes (GCM, CCM, EAX, SIV, OCB)\n* Accelerated AES on Intel platforms via AES-NI\n* First class support for PyPy\n* Elliptic curves cryptography (NIST P-256 curve only)\n* Better and more\
    \ compact API (`nonce` and `iv` attributes for ciphers,\n  automatic generation of random nonces and IVs, simplified CTR cipher mode,\n  and more)\n* SHA-3 (including SHAKE XOFs) and BLAKE2 hash algorithms\n\
    * Salsa20 and ChaCha20 stream ciphers\n* scrypt and HKDF\n* Deterministic (EC)DSA\n* Password-protected PKCS#8 key containers\n* Shamir's Secret Sharing scheme\n* Random numbers get sourced directly\
    \ from the OS (and not from a CSPRNG in userspace)\n* Simplified install process, including better support for Windows\n* Cleaner RSA and DSA key generation (largely based on FIPS 186-4)\n* Major clean\
    \ ups and simplification of the code base\n\nPyCryptodome is not a wrapper to a separate C library like *OpenSSL*.\nTo the largest possible extent, algorithms are implemented in pure Python.\nOnly the\
    \ pieces that are extremely critical to performance (e.g. block ciphers)\nare implemented as C extensions.\n\nFor more information, see the `homepage`_.\n\nAll the code can be downloaded from `GitHub`_.\n\
    \n.. _pycryptodomex: https://pypi.python.org/pypi/pycryptodomex\n.. _`homepage`: http://www.pycryptodome.org\n.. _GitHub: https://github.com/Legrandin/pycryptodome\n"
  doc_url: ''
  dev_url: ''

extra:
  recipe-maintainers: ''
