{% set name = "pydantic" %}
{% set version = "0.14" %}
{% set file_ext = "tar.gz" %}
{% set hash_type = "sha256" %}
{% set hash_value = "fb504261a33cab2e44e4cf2abc1dc513bcbfcfcdf5ec1ba1a11c0da0ac3a668e" %}

package:
  name: '{{ name|lower }}'
  version: '{{ version }}'

source:
  fn: '{{ name }}-{{ version }}.{{ file_ext }}'
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.{{ file_ext }}
  '{{ hash_type }}': '{{ hash_value }}'

build:
  noarch: python
  number: 0
  script: python setup.py install --single-version-externally-managed --record=record.txt

requirements:
  host:
    - python
    - setuptools
  run:
    - python >=3.6

test:
  imports:
    - pydantic

about:
  home: https://github.com/samuelcolvin/pydantic
  license: MIT License
  license_family: MIT
  license_file: ''
  summary: Data validation and settings management using python 3.6 type hinting
  description: "pydantic\n========\n\n|BuildStatus| |Coverage| |pypi| |gitter|\n\nData validation and settings management using python 3.6 type hinting.\n\nSee `documentation`_ for more details.\n\n.. |BuildStatus|\
    \ image:: https://travis-ci.org/samuelcolvin/pydantic.svg?branch=master\n   :target: https://travis-ci.org/samuelcolvin/pydantic\n.. |Coverage| image:: https://codecov.io/gh/samuelcolvin/pydantic/branch/master/graph/badge.svg\n\
    \   :target: https://codecov.io/gh/samuelcolvin/pydantic\n.. |pypi| image:: https://img.shields.io/pypi/v/pydantic.svg\n   :target: https://pypi.python.org/pypi/pydantic\n.. |gitter| image:: https://badges.gitter.im/pydantic.svg\n\
    \   :target: https://gitter.im/pydantic/Lobby\n.. _documentation: https://pydantic-docs.helpmanual.io/\n\n\n.. :changelog:\n\nHistory\n-------\n\nv0.13.1 (2018-09-21)\n.....................\n* fix issue\
    \ where int_validator doesn't cast a ``bool`` to an ``int`` #264 by @nphyatt\n* add deep copy support for ``BaseModel.copy()`` #249, @gangefors\n\nv0.13.0 (2018-08-25)\n.....................\n* raise\
    \ an exception if a field's name shadows an existing ``BaseModel`` attribute #242\n* add ``UrlStr`` and ``urlstr`` types #236\n* timedelta json encoding ISO8601 and total seconds, custom json encoders\
    \ #247, by @cfkanesan and @samuelcolvin\n* allow ``timedelta`` objects as values for properties of type ``timedelta`` (matches ``datetime`` etc. behavior) #247\n\nv0.12.1 (2018-07-31)\n....................\n\
    * fix schema generation for fields defined using ``typing.Any`` #237\n\nv0.12.0 (2018-07-31)\n....................\n* add ``by_alias`` argument in ``.dict()`` and ``.json()`` model methods #205\n* add\
    \ Json type support #214\n* support tuples #227\n* major improvements and changes to schema #213\n\nv0.11.2 (2018-07-05)\n....................\n* add ``NewType`` support #115\n* fix ``list``, ``set``\
    \ & ``tuple`` validation #225\n* separate out ``validate_model`` method, allow errors to be returned along with valid values #221\n\nv0.11.1 (2018-07-02)\n....................\n* support Python 3.7\
    \ #216, thanks @layday\n* Allow arbitrary types in model #209, thanks @oldPadavan\n\nv0.11.0 (2018-06-28)\n....................\n* make ``list``, ``tuple`` and ``set`` types stricter #86\n* **breaking\
    \ change**: remove msgpack parsing #201\n* add ``FilePath`` and ``DirectoryPath`` types #10\n* model schema generation #190\n* JSON serialisation of models and schemas #133\n\nv0.10.0 (2018-06-11)\n\
    ....................\n* add ``Config.allow_population_by_alias`` #160, thanks @bendemaree\n* **breaking change**: new errors format #179, thanks @Gr1N\n* **breaking change**: removed ``Config.min_number_size``\
    \ and ``Config.max_number_size`` #183, thanks @Gr1N\n* **breaking change**: correct behaviour of ``lt`` and ``gt`` arguments to ``conint`` etc. #188\n  for the old behaviour use ``le`` and ``ge`` #194,\
    \ thanks @jaheba\n* added error context and ability to redefine error message templates using ``Config.error_msg_templates`` #183,\n  thanks @Gr1N\n* fix typo in validator exception #150\n* copy defaults\
    \ to model values, so different models don't share objects #154\n\nv0.9.1 (2018-05-10)\n...................\n* allow custom ``get_field_config`` on config classes #159\n* add ``UUID1``, ``UUID3``, ``UUID4``\
    \ and ``UUID5`` types #167, thanks @Gr1N\n* modify some inconsistent docstrings and annotations #173, thanks @YannLuo\n* fix type annotations for exotic types #171, thanks @Gr1N\n* re-use type validators\
    \ in exotic types #171\n* scheduled monthly requirements updates #168\n* add ``Decimal``, ``ConstrainedDecimal`` and ``condecimal`` types #170, thanks @Gr1N\n\nv0.9.0 (2018-04-28)\n...................\n\
    * tweak email-validator import error message #145\n* fix parse error of ``parse_date()`` and ``parse_datetime()`` when input is 0 #144, thanks @YannLuo\n* add ``Config.anystr_strip_whitespace`` and\
    \ ``strip_whitespace`` kwarg to ``constr``,\n  by default values is ``False`` #163, thanks @Gr1N\n* add ``ConstrainedFloat``, ``confloat``, ``PositiveFloat`` and ``NegativeFloat`` types #166, thanks\
    \ @Gr1N\n\nv0.8.0 (2018-03-25)\n...................\n* fix type annotation for ``inherit_config`` #139\n* **breaking change**: check for invalid field names in validators #140\n* validate attributes\
    \ of parent models #141\n* **breaking change**: email validation now uses\n  `email-validator <https://github.com/JoshData/python-email-validator>`_ #142\n\nv0.7.1 (2018-02-07)\n...................\n\
    * fix bug with ``create_model`` modifying the base class\n\nv0.7.0 (2018-02-06)\n...................\n* added compatibility with abstract base classes (ABCs) #123\n* add ``create_model`` method #113\
    \ #125\n* **breaking change**: rename ``.config`` to ``.__config__`` on a model\n* **breaking change**: remove deprecated ``.values()`` on a model, use ``.dict()`` instead\n* remove use of ``OrderedDict``\
    \ and use simple dict #126\n* add ``Config.use_enum_values`` #127\n* add wildcard validators of the form ``@validate('*')`` #128\n\nv0.6.4 (2018-02-01)\n...................\n* allow python date and\
    \ times objects #122\n\nv0.6.3 (2017-11-26)\n...................\n* fix direct install without ``README.rst`` present\n\nv0.6.2 (2017-11-13)\n...................\n* errors for invalid validator use\n\
    * safer check for complex models in ``Settings``\n\nv0.6.1 (2017-11-08)\n...................\n* prevent duplicate validators, #101\n* add ``always`` kwarg to validators, #102\n\nv0.6.0 (2017-11-07)\n\
    ...................\n* assignment validation #94, thanks petroswork!\n* JSON in environment variables for complex types, #96\n* add ``validator`` decorators for complex validation, #97\n* depreciate\
    \ ``values(...)`` and replace with ``.dict(...)``, #99\n\nv0.5.0 (2017-10-23)\n...................\n* add ``UUID`` validation #89\n* remove ``index`` and ``track`` from error object (json) if they're\
    \ null #90\n* improve the error text when a list is provided rather than a dict #90\n* add benchmarks table to docs #91\n\nv0.4.0 (2017-07-08)\n...................\n* show length in string validation\
    \ error\n* fix aliases in config during inheritance #55\n* simplify error display\n* use unicode ellipsis in ``truncate``\n* add ``parse_obj``, ``parse_raw`` and ``parse_file`` helper functions #58\n\
    * switch annotation only fields to come first in fields list not last\n\nv0.3.0 (2017-06-21)\n...................\n* immutable models via ``config.allow_mutation = False``, associated cleanup and performance\
    \ improvement #44\n* immutable helper methods ``construct()`` and ``copy()`` #53\n* allow pickling of models #53\n* ``setattr`` is removed as ``__setattr__`` is now intelligent #44\n* ``raise_exception``\
    \ removed, Models now always raise exceptions #44\n* instance method validators removed\n* django-restful-framework benchmarks added #47\n* fix inheritance bug #49\n* make str type stricter so list,\
    \ dict etc are not coerced to strings. #52\n* add ``StrictStr`` which only always strings as input #52\n\nv0.2.1 (2017-06-07)\n...................\n* pypi and travis together messed up the deploy of\
    \ ``v0.2`` this should fix it\n\nv0.2.0 (2017-06-07)\n...................\n* **breaking change**: ``values()`` on a model is now a method not a property,\n  takes ``include`` and ``exclude`` arguments\n\
    * allow annotation only fields to support mypy\n* add pretty ``to_string(pretty=True)`` method for models\n\nv0.1.0 (2017-06-03)\n...................\n* add docs\n* add history\n\n\n"
  doc_url: ''
  dev_url: ''

extra:
  recipe-maintainers: ''
